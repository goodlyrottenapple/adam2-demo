{"version":3,"sources":["components/ContentWrapper.js","components/PageTitle.js","components/builders/SharingMode.js","components/builders/ResourceProperties.js","components/builders/Contact.js","components/builders/Term.js","components/types.js","pages/MainPage.js","MainRouter.js","index.js"],"names":["Padding","styled","div","gridSize","children","Grid","GridColumn","PageTitle","h1","sharingModeEnum","SharingMode","state","data","props","sharingMode","handleChange","prop_name","e","newData","value","setState","setData","this","style","paddingBottom","Select","className","classNamePrefix","menuPortalTarget","document","body","styles","menuPortal","base","zIndex","options","map","label","defaultValue","onChange","React","Component","resourceDataLevelEnum","ResourceProperties","resourceName","resourceDescription","resourceDataLevel","target","medium","Textfield","name","paddingTop","Contact","resourceContactNames","email","restriction_ruleEnum","typeMap","type","canHaveChildren","data_use_class","restriction_class","restriction_rule","restriction_object","constraints_detals","constraints_details","childrenType","rootNesting","terms","builders","Object","keys","filter","MainPage","counter","tree","rootId","items","id","hasChildren","isExpanded","isChildrenLoading","storeData","newTree","renderBuilderFromTreeItem","item","TypeTag","settings_id","match","params","renderItem","provided","onExpand","onCollapse","ref","innerRef","draggableProps","dragHandleProps","backgroundColor","borderColor","borderRadius","borderWidth","borderStyle","padding","marginTop","spacing","Button","appearance","onClick","onDelete","createTreeItem","ty","addItemToRoot","newItems","push","deleteItem","i","includes","splice","indexOf","queries","onDragEnd","source","destination","console","log","parentId","index","moveItemOnTree","mutateTree","selectedOption","saveTree","fetch","process","REACT_APP_API_URL","method","headers","JSON","stringify","then","res","json","result","error","v","parse","maxVal","length","parseInt","collectChildren","isRoot","c","c_children","child_terms","root","reduce","acc","mergeObjs","a","b","undefined","Array","isArray","ret","key","ContentWrapper","Tree","offsetPerLevel","isDragEnabled","isNestingEnabled","placeholder","language","text","mkADAM","showLineNumbers","MainRouter","basename","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5ae0c24f.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Grid, GridColumn } from '@atlaskit/page';\nimport { gridSize } from '@atlaskit/theme';\n\nconst Padding = styled.div`\n  margin: ${gridSize() * 4}px ${gridSize() * 8}px;\n  padding-bottom: ${gridSize() * 3}px;\n`;\n\nexport default ({ children }) => (\n  <Grid>\n    <GridColumn>\n      <Padding>{children}</Padding>\n    </GridColumn>\n  </Grid>\n)","import styled from 'styled-components';\nimport { gridSize } from '@atlaskit/theme';\n\nconst PageTitle = styled.h1`\n  margin-bottom: ${gridSize() * 2}px;\n`;\n\nexport default PageTitle;\n","import React from 'react';\nimport Select from '@atlaskit/select';\nimport { Grid, GridColumn } from '@atlaskit/page';\nimport Textfield from '@atlaskit/textfield';\n\nconst sharingModeEnum = [\"UNKNOWN\", \"DISCOVERY\", \"ACCESS\", \"DISCOVERY_AND_ACCESS\"]\n\nexport default class SharingMode extends React.Component {\n\n\tstate = {\n\t\tdata: this.props.data ? this.props.data : {\n\t\t\tsharingMode:sharingModeEnum[0]\n\t\t},\n\t}\n\n\n  componentDidMount() {\n    this.props.setData(this.state.data);\n  }\n\n\n\thandleChange = prop_name => e =>  {\n\t\tconst newData = {...this.state.data};\n\t\tnewData[prop_name] = e.value;\n\t\tthis.setState({data: newData});\n\t\tthis.props.setData(newData);\n\t}\n\n\n\t\n\trender() {\n\t\treturn (\n\t\t  <div>\n\t\t  <Grid>\n\t\t  \t<GridColumn>\n\t\t  \t\t<h5 style={{paddingBottom: '0.5em'}}>Sharing mode:</h5>\n          <Select\n            className=\"single-select\"\n          \tclassNamePrefix=\"react-select\"\n          \tmenuPortalTarget={document.body}\n            styles={{\n                  menuPortal: base => ({\n                    ...base,\n                    zIndex: 9999,\n                  }),\n                }}\n            options={sharingModeEnum.map(e => ({label: e, value: e}))}\n            defaultValue={{label:this.state.data.sharingMode, value:this.state.data.sharingMode}}\n            onChange={this.handleChange('sharingMode')} \n          />\n\t\t    </GridColumn>\n\n\t\t\t\t</Grid>\n\t\t  </div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport Select from '@atlaskit/select';\nimport { Grid, GridColumn } from '@atlaskit/page';\nimport Textfield from '@atlaskit/textfield';\n\nconst resourceDataLevelEnum = [\"UNKNOWN\", \"DATABASE\", \"METADATA\", \"SUMMARISED\", \"DATASET\", \"RECORDSET\", \"RECORD\", \"RECORDFIELD\"]\n\nexport default class ResourceProperties extends React.Component {\n\n\tstate = {\n\t\tdata: this.props.data ? this.props.data : {\n\t\t\tresourceName:'',\n\t\t\tresourceDescription: '',\n\t\t\tresourceDataLevel:resourceDataLevelEnum[0]\n\t\t},\n\t}\n\n\n  componentDidMount() {\n    this.props.setData(this.state.data);\n  }\n\n\n\thandleChange = prop_name => e =>  {\n\t\tconst newData = {...this.state.data};\n\t\tif (prop_name === 'resourceDataLevel'){\n\t\t\tnewData[prop_name] = e.value;\n\t\t}\n\t\telse {\n\t\t\tnewData[prop_name] = e.target.value;\n\t\t} \n\t\tthis.setState({data: newData});\n\t\tthis.props.setData(newData);\n\t}\n\n\n\t\n\trender() {\n\t\treturn (\n\t\t  <div>\n\t\t  <Grid>\n\t\t  \t<GridColumn medium={4}>\n\t\t\t\t\t<h5 style={{paddingBottom: '0.5em'}}>Resource name:</h5>\n\t\t\t\t\t<Textfield\n\t\t\t\t\t\tname=\"resourceName\"\n\t\t\t\t\t\tdefaultValue={this.state.data.resourceName}\n\t\t\t\t\t\tonChange={this.handleChange('resourceName')} \n\t\t\t\t\t/>\n\t\t  \t</GridColumn>\n\t\t\t\t<GridColumn medium={5}>\n\t\t  \t\t<h5 style={{paddingBottom: '0.5em'}}>Data level:</h5>\n          <Select\n            className=\"single-select\"\n          \tclassNamePrefix=\"react-select\"\n          \tmenuPortalTarget={document.body}\n            styles={{\n                  menuPortal: base => ({\n                    ...base,\n                    zIndex: 9999,\n                  }),\n                }}\n            options={resourceDataLevelEnum.map(e => ({label: e, value: e}))}\n            defaultValue={{label:this.state.data.resourceDataLevel, value:this.state.data.resourceDataLevel}}\n            onChange={this.handleChange('resourceDataLevel')} \n          />\n\t\t    </GridColumn>\n\n\t\t\t\t</Grid>\n\t\t\t\t\n\t\t  \n\t\t  <div style={{paddingTop: '1.5em'}}>\n\t\t  <Grid >\n\t\t  \t<GridColumn medium={12}>\n\t\t  \t<h5 style={{paddingBottom: '0.5em'}}>Description:</h5>\n\t\t  \t<Textfield\n\t\t      name=\"resourceDescription\"\n\t\t      defaultValue={this.state.data.resourceDescription}\n\t\t      onChange={this.handleChange('resourceDescription')} \n\t\t    />\n\t\t  \t</GridColumn>\n\t\t\t</Grid>\n\t\t\t</div>\n\t\t  \n\t\t  </div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport { Grid, GridColumn } from '@atlaskit/page';\nimport Textfield from '@atlaskit/textfield';\n\n\nexport default class Contact extends React.Component {\n\n\tstate = {\n\t\tdata: this.props.data ? this.props.data : {\n\t\t\tresourceContactNames:[{name:'', email:''}]\n\t\t},\n\t}\n\n\n  componentDidMount() {\n    this.props.setData(this.state.data);\n  }\n\n\thandleChange = prop_name => e =>  {\n\t\tconst newData = {...this.state.data};\n\t\t\n\t\tnewData.resourceContactNames[0][prop_name] = e.target.value;\n\t\tthis.setState({data: newData});\n\t\tthis.props.setData(newData);\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t  <div>\n\t\t  <Grid>\n\t\t  \t<GridColumn medium={4}>\n\t\t\t\t\t<h5 style={{paddingBottom: '0.5em'}}>Name:</h5>\n\t\t\t\t\t<Textfield\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\tdefaultValue={this.state.data.resourceContactNames[0].name}\n\t\t\t\t\t\tonChange={this.handleChange('name')} \n\t\t\t\t\t/>\n\t\t  \t</GridColumn>\n\t\t\t\t<GridColumn medium={5}>\n\t\t  \t\t<h5 style={{paddingBottom: '0.5em'}}>Email:</h5>\n          <Textfield\n\t\t      name=\"email\"\n\t\t      defaultValue={this.state.data.resourceContactNames[0].email}\n\t\t      onChange={this.handleChange('email')} \n\t\t    />\n\t\t    </GridColumn>\n\n\t\t\t\t</Grid>\n\t\t  \n\t\t  </div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport Select from '@atlaskit/select';\nimport { Grid, GridColumn } from '@atlaskit/page';\nimport Textfield from '@atlaskit/textfield';\n\nconst restriction_ruleEnum = [\"UNKNOWN\", \"NO_CONSTRAINTS\", \"CONSTRAINTS\", \"FORBIDDEN\"]\n\nexport default class Term extends React.Component {\n\n\tstate = {\n\t\tdata: this.props.data ? this.props.data : {\n\t\t\tdata_use_class:null,\n\t\t\trestriction_class: {restriction_rule: \"UNKNOWN\", restriction_object:null, constraints_detals:''}\n\t\t},\n\t}\n\n\n  componentDidMount() {\n    this.props.setData(this.state.data);\n  }\n\n\n\thandleChange = prop_name => e =>  {\n\t\tconst newData = {...this.state.data};\n\t\tif (prop_name === 'constraints_details'){\n\t\t\tnewData.restriction_class[prop_name] = e.target.value;\n\t\t}\n\t\telse if (prop_name === \"restriction_rule\" || prop_name === \"restriction_object\"){\n\t\t\tnewData.restriction_class[prop_name] = e.value;\n    } \n    else newData[prop_name] = e.value;\n\t\tthis.setState({data: newData});\n\t\tthis.props.setData(newData);\n\t}\n\n\n\t\n\trender() {\n\t\treturn (\n\t\t  <div>\n      <Grid >\n\t\t  \t<GridColumn medium={12}>\n\t\t  \t<h5 style={{paddingBottom: '0.5em'}}>Data use class:</h5>\n\t\t  \t<Select\n            className=\"single-select\"\n          \tclassNamePrefix=\"react-select\"\n          \tmenuPortalTarget={document.body}\n            styles={{\n                  menuPortal: base => ({\n                    ...base,\n                    zIndex: 9999,\n                  }),\n                }}\n            options={[\"dummy1\", \"dummy2\"].map(e => ({label: e, value: e}))}\n            defaultValue={{label:this.state.data.data_use_class, value:this.state.data.data_use_class}}\n            onChange={this.handleChange('data_use_class')} \n          />\n\t\t  \t</GridColumn>\n\t\t\t</Grid>\n\t\t  <div style={{paddingTop: '1.5em'}}>\n\t\t  <Grid>\n        <GridColumn medium={5}>\n\t\t  \t\t<h5 style={{paddingBottom: '0.5em'}}>Restriction rule:</h5>\n          <Select\n            className=\"single-select\"\n          \tclassNamePrefix=\"react-select\"\n          \tmenuPortalTarget={document.body}\n            styles={{\n                  menuPortal: base => ({\n                    ...base,\n                    zIndex: 9999,\n                  }),\n                }}\n            options={restriction_ruleEnum.map(e => ({label: e, value: e}))}\n            defaultValue={{label:this.state.data.restriction_class.restriction_rule, value:this.state.data.restriction_class.restriction_rule}}\n            onChange={this.handleChange('restriction_rule')} \n          />\n\t\t    </GridColumn>\n\n        <GridColumn medium={5}>\n\t\t  \t\t<h5 style={{paddingBottom: '0.5em'}}>Restriction object:</h5>\n          <Select\n            className=\"single-select\"\n          \tclassNamePrefix=\"react-select\"\n          \tmenuPortalTarget={document.body}\n            styles={{\n                  menuPortal: base => ({\n                    ...base,\n                    zIndex: 9999,\n                  }),\n                }}\n            options={[\"dummy1\", \"dummy2\"].map(e => ({label: e, value: e}))}\n            defaultValue={{label:this.state.data.restriction_class.restriction_object, value:this.state.data.restriction_class.restriction_object}}\n            onChange={this.handleChange('restriction_object')} \n          />\n\t\t    </GridColumn>\n\n\t\t  \t<GridColumn medium={4}>\n\t\t\t\t\t<h5 style={{paddingBottom: '0.5em'}}>Constraints details:</h5>\n\t\t\t\t\t<Textfield\n\t\t\t\t\t\tname=\"resourceName\"\n\t\t\t\t\t\tdefaultValue={this.state.data.restriction_class.constraints_details}\n\t\t\t\t\t\tonChange={this.handleChange('constraints_details')} \n\t\t\t\t\t/>\n\t\t  \t</GridColumn>\n      </Grid>\n\n\n\n\t\t\t</div>\n\t\t  \n\t\t  </div>\n\t\t);\n\t}\n}\n","\nimport SharingMode from './builders/SharingMode';\nimport ResourceProperties from './builders/ResourceProperties';\nimport Contact from './builders/Contact';\nimport Term from './builders/Term';\n\n\nexport const typeMap = {\n    'ResourceProperties': { \n    \ttype: ResourceProperties,\n\t\t\tlabel: 'Resource properties',\n\t\t\tcanHaveChildren: false\n\t\t},\n    'Contact': { \n    \ttype: Contact,\n\t\t\tlabel: 'Contact',\n\t\t\tcanHaveChildren: false\n    },\n    'SharingMode': { \n    \ttype: SharingMode,\n\t\t\tlabel: 'Sharing mode',\n\t\t\tcanHaveChildren: false\n\t\t},\n\t\t'Term': { \n    \ttype: Term,\n\t\t\tlabel: 'Term',\n\t\t\tcanHaveChildren: true,\n\t\t\tchildrenType: ['Term'],\n\t\t\trootNesting: (e) => ({terms:[e]})\n    }\n  }\n","import React, { Component } from 'react';\nimport ContentWrapper from '../components/ContentWrapper';\nimport PageTitle from '../components/PageTitle';\n\nimport styled from 'styled-components';\nimport Tree, {\n  mutateTree,\n  moveItemOnTree,\n  addItemToTree,\n  RenderItemParams,\n  TreeItem,\n  TreeData,\n  ItemId,\n  TreeSourcePosition,\n  TreeDestinationPosition,\n} from '@atlaskit/tree';\nimport Button, { ButtonGroup } from '@atlaskit/button';\nimport { Grid, GridColumn } from '@atlaskit/page';\nimport Select from '@atlaskit/select';\nimport CrossIcon from '@atlaskit/icon/glyph/cross';\nimport { AkCodeBlock } from '@atlaskit/code';\n\n\nimport { typeMap } from '../components/types'\n\n\nconst PADDING_PER_LEVEL = 30;\n\nconst mergeObjs = (a,b) => {\n  if(a === undefined) return b;\n  if(b === undefined) return a;\n  switch(typeof a){\n    case \"object\": \n      if(Array.isArray(a)){\n        if(Array.isArray(b)) return [...a, ...b]\n        else return [...a, b]\n      } else {\n        const ret = {}\n        for (var key in a) {\n          if(b[key] === undefined) ret[key] = a[key]\n          else ret[key] = mergeObjs(a[key], b[key])\n        }\n\n        for (var key in b) {\n          if(a[key] === undefined) ret[key] = b[key]\n        }\n        return ret\n      }\n    default:\n      return a\n  }\n}\n\nconst collectChildren = (tree, children, isRoot = false) => {\n  return children.map(c => {\n    const c_children = collectChildren(tree, tree.items[c].children);\n    const res = tree.items[c].children > 0 ? {...tree.items[c].data, child_terms: c_children} : tree.items[c].data;\n    if(isRoot && tree.items[c].rootNesting) return  tree.items[c].rootNesting(res)\n    else return res;\n  });\n}\n\nconst builders = Object.keys(typeMap).filter(e => 'type' in typeMap[e]).map(e => {return {\n  value:e, \n  label: typeMap[e].label, \n  canHaveChildren:typeMap[e].canHaveChildren,\n  childrenType:typeMap[e].childrenType,\n  rootNesting:typeMap[e].rootNesting,\n }})\n\nexport default class MainPage extends Component<Props, State> {\n\n  state = {\n    counter:0,\n    tree: {\n      rootId: 'root',\n      items: {\n        'root': {\n          id: 'root',\n          children: [],\n          hasChildren: true,\n          isExpanded: true,\n          isChildrenLoading: false,\n          canHaveChildren: true\n        },\n      },\n    }\n  }\n\n\n\n  componentDidMount() {\n    fetch(\n      process.env.REACT_APP_API_URL+\"/discovery/loadSettings?id=\"+this.props.match.params.id, {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'X-Requested-With': 'XMLHttpRequest'\n        }\n      })\n      .then(res => res.json())\n      .then(\n        (result) => {\n          // console.log(\"Tree: \");\n          if(result){\n            const newTree = JSON.parse(result)\n\n            const items = Object.keys(newTree.items);\n            var maxVal = 0, v;\n            for (var i = 0; i < items.length; i++) {\n              v = parseInt(items[i]);\n              if(v > maxVal) maxVal = v;\n            }\n\n            this.setState({\n              tree: newTree,\n              counter: maxVal+1\n            });\n          }\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            error: error\n          });\n        }\n      )\n  }\n\n\n\n  storeData = (id) => {\n    return (data) => {\n      var newTree = {...this.state.tree}\n      newTree.items[id].data = data\n      \n      this.setState({\n        tree: newTree,\n      });\n    }\n  }\n\n\n  renderBuilderFromTreeItem = (item: TreeItem) => {\n    const TypeTag = typeMap[item.type].type\n    return <TypeTag setData={this.storeData(item.id)} data={item.data} label={typeMap[item.type].label} settings_id={this.props.match.params.id}/>\n  }\n\n\n  renderItem = ({ item, onExpand, onCollapse, provided }: RenderItemParams) => {\n\n    return (\n      <div\n        ref={provided.innerRef}\n        {...provided.draggableProps}\n        {...provided.dragHandleProps}\n        \n      >\n        <div style={{\n          backgroundColor:'white', \n          borderColor: 'rgb(222, 235, 255)',\n          borderRadius: '3px',\n          borderWidth: '2px',\n          borderStyle: 'solid',\n          padding: '10px',\n          marginTop: '5px',\n        }}>\n        <Grid spacing=\"compact\">\n          <GridColumn medium={1}>\n            <Button appearance={'subtle'} spacing=\"none\" onClick={() => this.onDelete(item.id)}>\n              <CrossIcon/>\n            </Button>\n          </GridColumn>\n          <GridColumn medium={11}>\n            {this.renderBuilderFromTreeItem(item)}\n          </GridColumn>\n        </Grid>\n        </div>\n      </div>\n    );\n  };\n\n  \n  createTreeItem = (id: string, ty: string, canHaveChildren, childrenType, rootNesting) => {\n    return {\n      id: id,\n      children: [],\n      hasChildren: false,\n      isExpanded: false,\n      isChildrenLoading: false,\n      canHaveChildren: canHaveChildren,\n      childrenType:childrenType,\n      rootNesting:rootNesting,\n      type: ty,\n    };\n  };\n\n  addItemToRoot = (tree: TreeData, id: string, ty: string, canHaveChildren, childrenType:string[], rootNesting) => {\n    // const destinationParent = tree.items[position.parentId];\n    const newItems = {...tree.items};\n    newItems[`${id}`] = this.createTreeItem(id, ty, canHaveChildren, childrenType, rootNesting);\n    newItems['root'].children.push(`${id}`);\n    return {\n      rootId:tree.rootId, \n      items: newItems\n    } \n  }\n\n  deleteItem = (tree: TreeData, id: string) => {\n    const newItems = {...tree.items};\n    delete newItems[`${id}`];\n\n    for (var i of Object.keys(newItems)) {\n      if (newItems[i].children.includes(`${id}`)) {\n        newItems[i].children.splice(newItems[i].children.indexOf(`${id}`), 1);\n      }\n    }\n\n    return {\n      rootId:tree.rootId, \n      items: newItems\n    } \n  }\n\n\n  onDelete = (id: string) => {\n    const { counter, tree, queries } = this.state;\n    const newTree = this.deleteItem(tree, id);\n    const newQueries = {...queries}\n    delete newQueries[id];\n\n    this.setState({\n      tree: newTree,\n    });\n  }\n\n  \n\n\n  onDragEnd = (\n    source: TreeSourcePosition,\n    destination?: TreeDestinationPosition,\n  ) => {\n    const { tree } = this.state;\n\n    if (!destination) {\n      return;\n    }\n\n    console.log(tree.items[tree.items[source.parentId].children[source.index]].type);\n\n    if(!tree.items[destination.parentId].canHaveChildren\n       || \n      (tree.items[destination.parentId].childrenType && !tree.items[destination.parentId].childrenType.includes(tree.items[tree.items[source.parentId].children[source.index]].type))\n    ){\n      return;\n    }\n    const newTree = moveItemOnTree(tree, source, destination);\n    this.setState({\n      tree: mutateTree(newTree, destination.parentId, { isExpanded: true }),\n    });\n  };\n\n  handleChange = selectedOption => {\n        const { counter, tree } = this.state;\n        const newTree = this.addItemToRoot(tree, counter, selectedOption.value, selectedOption.canHaveChildren, selectedOption.childrenType, selectedOption.rootNesting);\n\n        this.setState({\n          counter: counter+1,\n          tree: newTree,\n        });\n  };\n\n  saveTree = () => {\n    fetch(\n      process.env.REACT_APP_API_URL+\"/discovery/saveSettings\", {\n        method:'POST',\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'X-Requested-With': 'XMLHttpRequest'\n        },\n        body: JSON.stringify({id: this.props.match.params.id, data:this.state.tree})\n      })\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          console.log(error)\n        })\n  }\n\n\n\n\n  mkADAM(tree){\n    return collectChildren(tree, tree.items.root.children, true).reduce((acc,c) => mergeObjs(acc,c), {})\n  }\n\n  render() {\n    const { tree } = this.state;\n\n    return (\n      <ContentWrapper>\n        <PageTitle>ADA-M 2.0 demo</PageTitle>\n        <Tree\n          tree={tree}\n          renderItem={this.renderItem}\n          onDragEnd={this.onDragEnd}\n          offsetPerLevel={PADDING_PER_LEVEL}\n          isDragEnabled\n          isNestingEnabled\n        />\n        <div style={{marginTop:'100px'}}>\n          {/* <h4 style={{paddingBottom:'10px'}}>Add a property:</h4> */}\n          <Select\n            options={builders}\n            onChange={this.handleChange}\n            placeholder=\"Select a property to add\" />\n        </div>\n        <div style={{marginTop:'20px'}}>\n        {/* <Button appearance=\"primary\" onClick={this.saveTree}>Save settings</Button> */}\n        </div>\n        <h4 style={{paddingTop:'30px', paddingBottom:'10px'}}>ADA-M:</h4>\n        <AkCodeBlock \n          language=\"json\" \n          text={JSON.stringify(this.mkADAM(this.state.tree), null, 2)} \n          showLineNumbers={false}/>\n      </ContentWrapper> \n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n\nimport MainPage from './pages/MainPage';\nimport '@atlaskit/css-reset';\nimport 'react-grid-layout/css/styles.css'\nimport 'react-resizable/css/styles.css'\n\n\nexport default class MainRouter extends Component {\n\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/\" component={MainPage} />\n        </Switch>\n      </Router>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MainRouter from './MainRouter';\n\n// eslint-disable-next-line no-undef\nReactDOM.render(<MainRouter />, document.getElementById('app-root'));\n"],"sourceRoot":""}